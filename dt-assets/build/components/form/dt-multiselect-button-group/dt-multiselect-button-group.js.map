{"version":3,"file":"dt-multiselect-button-group.js","sources":["../../../src/components/form/dt-multiselect-button-group/dt-multiselect-button-group.js"],"sourcesContent":["import { html, css } from 'lit';\nimport DtFormBase from '../dt-form-base.js';\n\n\nexport class DtMultiSelectButtonGroup extends DtFormBase {\n  static get styles() {\n    return css`\n   :host {\n        margin-bottom: 5px;\n      }\n      span .icon {\n        vertical-align: middle;\n        padding: 0 2px;\n      }\n      .icon img {\n        width: 15px !important;\n        height: 15px !important;\n        margin-right: 1px !important;\n        vertical-align: sub;\n      }\n      .button-group {\n        display: inline-flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n  `\n  };\n\n  static get properties() {\n    return {\n      buttons: { type: Array },\n      selectedButtons: { type: Array },\n      value: { type: Array, reflect: true },\n      icon: { type: String },\n      isModal: { type: Array },\n    };\n  }\n\n  get classes() {\n    const classes = {\n      'dt-button': true,\n      'dt-button--outline': this.outline,\n      'dt-button--rounded': this.rounded,\n    };\n    const contextClass = `dt-button--${this.context}`;\n    classes[contextClass] = true;\n    return classes;\n  }\n\n  constructor() {\n    super();\n    this.buttons = [];\n    this.selectedButtons = [];\n    this.value = [];\n    this.custom = true;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.selectedButtons = this.value ? this.value.map(button => ({ value: button })) : [];\n  }\n\n\n  _handleButtonClick(event, label) {\n    const buttonValue = event.target.value;\n    if (buttonValue === \"milestone_baptized\" && this.isModal && this.isModal.includes(label) && !this.value?.includes(\"milestone_baptized\")) {\n      const modal = document.querySelector(`#baptized-modal`);\n      modal.shadowRoot.querySelector('dialog').showModal();\n      document.querySelector('body').style.overflow = \"hidden\"\n    }\n    const index = this.selectedButtons.findIndex(\n      button => button.value === buttonValue\n    );\n    if (index > -1) {\n      this.selectedButtons.splice(index, 1);\n      this.selectedButtons.push({ value: `-${buttonValue}` });\n    } else {\n      this.selectedButtons.push({ value: buttonValue});\n    }\n    this.value = this.selectedButtons.filter(button => !button.value.startsWith('-')).map(button => button.value);\n\n    this.dispatchEvent(new CustomEvent('change', {\n      detail: {\n        field: this.name,\n        oldValue: this.value,\n        newValue: this.selectedButtons,\n      },\n    }));\n    this._setFormValue(this.value);\n    this.requestUpdate();\n  }\n\n  _inputKeyDown(e) {\n    const keycode = e.keyCode || e.which;\n    switch (keycode) {\n      case 13: // enter\n        this._handleButtonClick(e);\n        break;\n      default:\n        // handle other keycodes here\n        break;\n    }\n  }\n\n\n  render() {\n    return html`\n       ${this.labelTemplate()}\n       ${this.loading\n        ? html`<dt-spinner class=\"icon-overlay\"></dt-spinner>`\n        : null}\n        ${this.saved\n        ? html`<dt-checkmark class=\"icon-overlay success\"></dt-checkmark>`\n        : null}\n       <div class=\"button-group\">\n        ${this.buttons.map(buttonSet => {\n          const items = Object.keys(buttonSet);\n          return items.map(item => {\n            const isSelected = this.selectedButtons.some(\n              selected => selected.value === item && !selected.delete\n            )\n            const context = isSelected ? 'success' : 'disabled';\n\n            return html`\n            <dt-button\n            custom\n              id=${item}\n              type=\"success\"\n              context=${context}\n              .value=${item || this.value}\n              @click=\"${(e) => this._handleButtonClick(e, buttonSet[item].label)}\"\n              @keydown=\"${this._inputKeyDown}\"\n              role=\"button\"\n              >\n               <span class=\"icon\">\n                ${buttonSet[item].icon\n                ? html`<img src=\"${buttonSet[item].icon}\" alt=\"${this.iconAltText}\" />`\n                : null}\n            </span>\n             ${buttonSet[item].label}</dt-button>\n          `;\n          });\n        })}\n        </div>\n    `;\n  }\n}\n\nwindow.customElements.define(\n  'dt-multiselect-buttons-group',\n  DtMultiSelectButtonGroup\n);\n"],"names":["window","customElements","define","DtFormBase","styles","css","properties","buttons","type","Array","selectedButtons","value","reflect","icon","String","isModal","classes","this","outline","rounded","context","constructor","super","custom","connectedCallback","map","button","_handleButtonClick","event","label","buttonValue","target","includes","document","querySelector","shadowRoot","showModal","style","overflow","index","findIndex","splice","push","filter","startsWith","dispatchEvent","CustomEvent","detail","field","name","oldValue","newValue","_setFormValue","requestUpdate","_inputKeyDown","e","keyCode","which","render","html","labelTemplate","loading","saved","buttonSet","Object","keys","item","isSelected","some","selected","delete","iconAltText"],"mappings":"gMAoJAA,OAAOC,eAAeC,OACpB,+BAjJK,cAAuCC,EACjCC,oBACT,OAAOC,CAAG,gPAoBX,CAEUC,wBACT,MAAO,CACLC,QAAS,CAAEC,KAAMC,OACjBC,gBAAiB,CAAEF,KAAMC,OACzBE,MAAO,CAAEH,KAAMC,MAAOG,SAAS,GAC/BC,KAAM,CAAEL,KAAMM,QACdC,QAAS,CAAEP,KAAMC,OAEpB,CAEGO,cACF,MAAMA,EAAU,CACd,aAAa,EACb,qBAAsBC,KAAKC,QAC3B,qBAAsBD,KAAKE,SAI7B,OADAH,EADqB,cAAcC,KAAKG,YAChB,EACjBJ,CACR,CAEDK,cACEC,QACAL,KAAKV,QAAU,GACfU,KAAKP,gBAAkB,GACvBO,KAAKN,MAAQ,GACbM,KAAKM,QAAS,CACf,CAEDC,oBACEF,MAAME,oBACNP,KAAKP,gBAAkBO,KAAKN,MAAQM,KAAKN,MAAMc,KAAIC,IAAW,CAAEf,MAAOe,MAAa,EACrF,CAGDC,mBAAmBC,EAAOC,GACxB,MAAMC,EAAcF,EAAMG,OAAOpB,MACjC,GAAoB,uBAAhBmB,GAAwCb,KAAKF,SAAWE,KAAKF,QAAQiB,SAASH,KAAWZ,KAAKN,OAAOqB,SAAS,sBAAuB,CACzHC,SAASC,cAAc,mBAC/BC,WAAWD,cAAc,UAAUE,YACzCH,SAASC,cAAc,QAAQG,MAAMC,SAAW,QACjD,CACD,MAAMC,EAAQtB,KAAKP,gBAAgB8B,WACjCd,GAAUA,EAAOf,QAAUmB,IAEzBS,GAAS,GACXtB,KAAKP,gBAAgB+B,OAAOF,EAAO,GACnCtB,KAAKP,gBAAgBgC,KAAK,CAAE/B,MAAO,IAAImB,OAEvCb,KAAKP,gBAAgBgC,KAAK,CAAE/B,MAAOmB,IAErCb,KAAKN,MAAQM,KAAKP,gBAAgBiC,QAAOjB,IAAWA,EAAOf,MAAMiC,WAAW,OAAMnB,KAAIC,GAAUA,EAAOf,QAEvGM,KAAK4B,cAAc,IAAIC,YAAY,SAAU,CAC3CC,OAAQ,CACNC,MAAO/B,KAAKgC,KACZC,SAAUjC,KAAKN,MACfwC,SAAUlC,KAAKP,oBAGnBO,KAAKmC,cAAcnC,KAAKN,OACxBM,KAAKoC,eACN,CAEDC,cAAcC,GAEZ,GACO,MAFSA,EAAEC,SAAWD,EAAEE,OAG3BxC,KAAKU,mBAAmB4B,EAM7B,CAGDG,SACE,OAAOC,CAAI,GACN1C,KAAK2C,mBACL3C,KAAK4C,QACJF,CAAI,iDACJ,QACA1C,KAAK6C,MACLH,CAAI,6DACJ,iCAEA1C,KAAKV,QAAQkB,KAAIsC,GACHC,OAAOC,KAAKF,GACbtC,KAAIyC,IACf,MAAMC,EAAalD,KAAKP,gBAAgB0D,MACtCC,GAAYA,EAAS1D,QAAUuD,IAASG,EAASC,SAInD,OAAOX,CAAI,yBAGJO,8BALSC,EAAa,UAAY,uBAQ9BD,GAAQjD,KAAKN,kBACX4C,GAAMtC,KAAKU,mBAAmB4B,EAAGQ,EAAUG,GAAMrC,qBAChDZ,KAAKqC,mDAIbS,EAAUG,GAAMrD,KAChB8C,CAAI,aAAaI,EAAUG,GAAMrD,cAAcI,KAAKsD,gBACpD,eAEHR,EAAUG,GAAMrC,mBACpB,aAKR"}
import{i as t,y as e}from"../../lit-element-2409d5fe.js";import{D as s}from"../dt-form-base.js";import"../../dt-base.js";import"../../lit-localize-763e4978.js";import"../dt-label/dt-label.js";window.customElements.define("dt-multiselect-buttons-group",class extends s{static get styles(){return t`:host{margin-bottom:5px}span .icon{vertical-align:middle;padding:0 2px}.icon img{width:15px!important;height:15px!important;margin-right:1px!important;vertical-align:sub}.button-group{display:inline-flex;flex-direction:row;flex-wrap:wrap}`}static get properties(){return{buttons:{type:Array},selectedButtons:{type:Array},value:{type:Array,reflect:!0},icon:{type:String},isModal:{type:Array}}}get classes(){const t={"dt-button":!0,"dt-button--outline":this.outline,"dt-button--rounded":this.rounded};return t[`dt-button--${this.context}`]=!0,t}constructor(){super(),this.buttons=[],this.selectedButtons=[],this.value=[],this.custom=!0}connectedCallback(){super.connectedCallback(),this.selectedButtons=this.value?this.value.map((t=>({value:t}))):[]}_handleButtonClick(t,e){const s=t.target.value;if("milestone_baptized"===s&&this.isModal&&this.isModal.includes(e)&&!this.value?.includes("milestone_baptized")){document.querySelector("#baptized-modal").shadowRoot.querySelector("dialog").showModal(),document.querySelector("body").style.overflow="hidden"}const i=this.selectedButtons.findIndex((t=>t.value===s));i>-1?(this.selectedButtons.splice(i,1),this.selectedButtons.push({value:`-${s}`})):this.selectedButtons.push({value:s}),this.value=this.selectedButtons.filter((t=>!t.value.startsWith("-"))).map((t=>t.value)),this.dispatchEvent(new CustomEvent("change",{detail:{field:this.name,oldValue:this.value,newValue:this.selectedButtons}})),this._setFormValue(this.value),this.requestUpdate()}_inputKeyDown(t){if(13===(t.keyCode||t.which))this._handleButtonClick(t)}render(){return e`${this.labelTemplate()} ${this.loading?e`<dt-spinner class="icon-overlay"></dt-spinner>`:null} ${this.saved?e`<dt-checkmark class="icon-overlay success"></dt-checkmark>`:null}<div class="button-group">${this.buttons.map((t=>Object.keys(t).map((s=>{const i=this.selectedButtons.some((t=>t.value===s&&!t.delete));return e`<dt-button custom id="${s}" type="success" context="${i?"success":"disabled"}" .value="${s||this.value}" @click="${e=>this._handleButtonClick(e,t[s].label)}" @keydown="${this._inputKeyDown}" role="button"><span class="icon">${t[s].icon?e`<img src="${t[s].icon}" alt="${this.iconAltText}">`:null} </span>${t[s].label}</dt-button>`}))))}</div>`}});
//# sourceMappingURL=dt-multiselect-button-group.js.map

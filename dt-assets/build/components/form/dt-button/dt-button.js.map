{"version":3,"file":"dt-button.js","sources":["../../../src/components/form/dt-button/dt-button.js"],"sourcesContent":["import { html, css } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport DtBase from '../../dt-base.js';\nimport { styleMap } from 'lit-html/directives/style-map.js';\n\nexport class DtButton extends DtBase {\n  static get styles() {\n    return css`\n      :host {\n        display: inline-flex;\n        width: fit-content;\n        height: fit-content;\n      }\n\n      .dt-button {\n        cursor: pointer;\n        display: flex;\n        margin: var(--dt-button-margin, 5px);\n        padding: var(--dt-button-padding-y, 10px)\n          var(--dt-button-padding-x, 10px);\n        font-family: var(--dt-button-font-family);\n        font-size: var(--dt-button-font-size, 14px);\n        line-height: var(--dt-button-line-height, inherit);\n        font-weight: var(--dt-button-font-weight, 700);\n        background-color: var(\n          --dt-button-context-background-color,\n          var(--dt-button-background-color)\n        );\n        border: var(--dt-button-border-width, 1px) solid\n          var(--dt-button-context-border-color, var(--dt-button-border-color));\n        border-radius: var(--dt-button-border-radius, 10px);\n        box-shadow: var(\n          --dt-button-box-shadow,\n          --dt-button-context-box-shadow(0 2px 4px rgb(0 0 0 / 25%))\n        );\n        color: var(--dt-button-context-text-color, var(--dt-button-text-color));\n        text-rendering: optimizeLegibility;\n        gap: var(--dt-button-gap, 10px);\n        justify-content: var(--dt-button-justify-content, center);\n        align-content: var(--dt-button-align-content, center);\n        align-items: var(--dt-button-align-items, center);\n        text-decoration: var(\n          --dt-button-text-decoration,\n          var(--dt-button-context-text-decoration, none)\n        );\n        text-transform: var(--dt-button-text-transform, none);\n        letter-spacing: var(--dt-button-letter-spacing, normal);\n        width: var(--dt-button-width, 100%);\n        height: var(--dt-button-height, auto);\n        aspect-ratio: var(--dt-button-aspect-ratio, auto);\n        position: relative;\n      }\n\n      .dt-button.dt-button--outline {\n        background-color: transparent;\n        color: var(--dt-button-context-text-color, var(--text-color-inverse));\n      }\n\n      .dt-button--primary:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--primary-color);\n        --dt-button-context-background-color: var(--primary-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--link:not(.dt-button--outline) {\n        --dt-button-context-text-decoration: underline;\n        --dt-button-context-box-shadow: none;\n        --dt-button-context-border-color: transparent;\n        --dt-button-context-background-color: transparent;\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--alert:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--alert-color);\n        --dt-button-context-background-color: var(--alert-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--caution:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--caution-color);\n        --dt-button-context-background-color: var(--caution-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--success:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--success-color);\n        --dt-button-context-background-color: var(--success-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--inactive:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--inactive-color);\n        --dt-button-context-background-color: var(--inactive-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-light);\n      }\n\n      .dt-button--disabled:not(.dt-button--outline) {\n        --dt-button-context-border-color: var(--disabled-color);\n        --dt-button-context-background-color: var(--disabled-color);\n        --dt-button-context-text-color: var(--dt-button-text-color-dark);\n      }\n\n      .dt-button--primary.dt-button--outline {\n        --dt-button-context-border-color: var(--primary-color);\n        --dt-button-context-text-color: var(--primary-color);\n      }\n\n      .dt-button--alert.dt-button--outline {\n        --dt-button-context-border-color: var(--alert-color);\n        --dt-button-context-text-color: var(--alert-color);\n      }\n\n      .dt-button--caution.dt-button--outline {\n        --dt-button-context-border-color: var(--caution-color);\n        --dt-button-context-text-color: var(--caution-color);\n      }\n\n      .dt-button--success.dt-button--outline {\n        --dt-button-context-border-color: var(--success-color);\n        --dt-button-context-text-color: var(--success-color);\n      }\n\n      .dt-button--inactive.dt-button--outline {\n        --dt-button-context-border-color: var(--inactive-color);\n      }\n\n      .dt-button--disabled.dt-button--outline {\n        --dt-button-context-border-color: var(--disabled-color);\n      }\n\n      .dt-button.dt-button--rounded {\n        --dt-button-border-radius: 50%;\n        --dt-button-padding-x: 0px;\n        --dt-button-padding-y: 0px;\n        --dt-button-aspect-ratio: var(--dt-button-rounded-aspect-ratio, 1/1);\n      }\n\n      .dt-button--custom {\n        padding: var(--dt-button-padding-y, 7px)\n          var(--dt-button-padding-x, 10px);\n        font-size: var(--dt-button-font-size, 12px);\n        font-weight: var(--dt-button-font-weight, 300);\n        border-radius: var(--dt-button-border-radius, 5px);\n      }\n\n      .dt-button--star {\n        --dt-button-background-color: transparent;\n        --dt-button-border-color: transparent;\n        padding: 0;\n      }\n      ::slotted(svg) {\n        margin: 1.5em;\n        vertical-align: middle !important;\n      }\n\n      button.toggle {\n        margin-inline-end: 0;\n        margin-inline-start: auto;\n        background: none;\n        border: none;\n        color: inherit;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      label: { type: String },\n      context: { type: String },\n      type: { type: String },\n      outline: { type: Boolean },\n      href: { type: String },\n      title: { type: String },\n      onClick: { attribute: false },\n      rounded: { type: Boolean },\n      confirm: { type: String },\n      buttonClass: { type: String },\n      custom: { type: Boolean },\n      favorite: { type: Boolean, reflect: true },\n      favorited: { type: String },\n      listButton: { type: Boolean },\n      buttonStyle: { type: Object },\n    };\n  }\n\n  get classes() {\n    const classes = {\n      'dt-button': true,\n      'dt-button--outline': this.outline,\n      'dt-button--rounded': this.rounded,\n      'dt-button--custom': this.custom,\n    };\n    const contextClass = `dt-button--${this.context}`;\n    classes[contextClass] = true;\n    return classes;\n  }\n\n  constructor() {\n    super();\n    this.context = 'default';\n    this.favorite = this.favorited || false;\n    this.listButton = false;\n  }\n\n  connectedCallback() {\n    // Code that runs after the component's initial render\n    super.connectedCallback();\n    if (\n      this.id.startsWith('favorite') ||\n      this.id === 'follow-button' ||\n      this.id === 'following-button'\n    ) {\n      window.addEventListener('load', async () => {\n        const event = await new CustomEvent('dt:get-data', {\n          bubbles: true,\n          detail: {\n            field: this.id,\n            postType: this.postType,\n            onSuccess: result => {\n              // We are finding keys from the object as these particluar keys are send by API without any value.\n              const key = Object.keys(result).find(item =>\n                ['favorite', 'unfollow', 'follow'].includes(item)\n              );\n              switch (key) {\n                case 'favorite':\n                  {\n                    this.favorite = result.favorite ? result.favorite : false;\n                    const slot = this.shadowRoot.querySelector('slot');\n                    const slottedElements = slot.assignedNodes({\n                      flatten: true,\n                    });\n                    const svg = slottedElements.find(\n                      node =>\n                        node.nodeType === Node.ELEMENT_NODE &&\n                        node.classList.contains('icon-star')\n                    );\n                    if (this.favorite) {\n                      svg.classList.add('selected'); // Add the class\n                    } else {\n                      svg.classList.remove('selected'); // Remove the class\n                    }\n                    this.requestUpdate();\n                  }\n                  break;\n\n                case 'follow':\n                  this.following = true; // Updated state\n                  this.requestUpdate();\n                  break;\n\n                case 'unfollow':\n                  this.following = false;\n                  this.requestUpdate();\n                  break;\n\n                default:\n                  console.log('No matching Key found!');\n                  break;\n                // this.requestUpdate();\n              }\n            },\n            onError: error => {\n              console.warn(error);\n            },\n          },\n        });\n        this.dispatchEvent(event);\n      });\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    if (this.confirm) {\n      // eslint-disable-next-line no-restricted-globals, no-alert\n      if (!confirm(this.confirm)) {\n        e.preventDefault();\n        return;\n      }\n    }\n    if (\n      this.id.startsWith('favorite') ||\n      this.id === 'follow-button' ||\n      this.id === 'following-button'\n    ) {\n      e.preventDefault();\n      this.onClick(e);\n    } else if (this.id === 'create-post-button') {\n      const form = this.closest('form');\n      if (!form) {\n        console.error('Form not found!');\n      } else {\n        console.log('Form found', form);\n      }\n      const formData = new FormData(form);\n      const data = {\n        form: {},\n        el: {\n          type: 'access',\n        },\n      };\n      formData.forEach((value, key) => {\n        data.form[key] = value;\n      });\n\n      Array.from(form.elements).forEach(el => {\n        if (\n          el.localName.startsWith('dt-') &&\n          el.value &&\n          String(el.value).trim() !== ''\n        ) {\n          if (el.localName.startsWith('dt-comm')) {\n            // For 'dt-comm' elements, store filtered values\n            const filteredValues = el.value.map(item => ({\n              value: item.value,\n            }));\n            data.el[el.name] = filteredValues;\n          } else if (\n            el.localName.startsWith('dt-multi') ||\n            el.localName.startsWith('dt-tags')\n          ) {\n            // Handle multi and tags elements\n            const filteredValues = el.value.map(item => ({ value: item }));\n            data.el[el.name] = { values: filteredValues };\n          } else if (el.localName.startsWith('dt-connection')) {\n            // Handle connection elements\n            const filteredValues = el.value.map(item => ({\n              value: item.label,\n            }));\n            data.el[el.name] = { values: filteredValues };\n          } else {\n            // Store other dt-* element values\n            data.el[el.name] = el.value;\n          }\n        }\n      });\n      const event = new CustomEvent('send-data', {\n        detail: {\n          field: this.id,\n          newValue: data,\n        },\n      });\n      this.dispatchEvent(event);\n    } else {\n      const form = this.closest('form');\n      if (form) {\n        form.submit();\n      }\n    }\n  }\n\n  onClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.listButton) {\n      this.favorite = this.favorited;\n    }\n    if (this.id.startsWith('favorite')) {\n      const event = new CustomEvent('customClick', {\n        detail: {\n          field: this.id,\n          toggleState: !this.favorite,\n        },\n        bubbles: true,\n        composed: true,\n      });\n      this.favorite = !this.favorite;\n      const slot = this.shadowRoot.querySelector('slot');\n      const slottedElements = slot.assignedNodes({ flatten: true });\n      const svg = slottedElements.find(\n        node =>\n          node.nodeType === Node.ELEMENT_NODE &&\n          node.classList.contains('icon-star')\n      );\n      if (svg) {\n        if (svg.classList.contains('selected')) {\n          svg.classList.remove('selected'); // Remove the class\n        } else {\n          svg.classList.add('selected'); // Add the class\n        }\n      }\n      this.dispatchEvent(event);\n      this.requestUpdate();\n    } else if (this.id === 'follow-button' || this.id === 'following-button') {\n      const toggleState = this.following;\n      const event = new CustomEvent('customClick', {\n        detail: {\n          field: this.id,\n          toggleState,\n        },\n      });\n      this.id =\n        this.id === 'follow-button' ? 'following-button' : 'follow-button';\n      this.label = this.label === 'Follow' ? 'Following' : 'Follow';\n      this.outline = !this.outline;\n      this.following = !this.following;\n      this.requestUpdate();\n      this.dispatchEvent(event);\n    }\n  }\n\n  _getSVGIcon() {\n    return this.id === 'follow-button' || this.id === 'following-button'\n      ? html`<svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M12 9a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5a5 5 0 0 1 5-5a5 5 0 0 1 5 5a5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5\"\n          />\n        </svg>`\n      : '';\n  }\n\n  _dismiss() {\n    this.hide = true;\n  }\n\n  render() {\n    if (this.hide) {\n      return html``;\n    }\n\n    const buttonClasses = {\n      ...this.classes,\n    };\n    const slotContent =\n      (this.id === 'follow-button' || this.id === 'following-button') &&\n      this.label\n        ? this.label\n        : html`<slot></slot>`;\n    if (this.href) {\n      return html`\n        <a\n          id=${this.name}\n          class=${classMap(buttonClasses)}\n          href=${this.href}\n          title=${this.title}\n          type=${this.type}\n          @click=${this.handleClick}\n        >\n          <div>${slotContent}${this._getSVGIcon()}</div>\n        </a>\n      `;\n    }\n    return html`\n      <button\n        class=${classMap(buttonClasses)}\n        title=${this.title}\n        style=${styleMap(this.buttonStyle || {})}\n        type=${this.type}\n        .value=${this.value}\n        @click=${this.handleClick}\n      >\n        <div>${slotContent}${this._getSVGIcon()}</div>\n      </button>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-button', DtButton);\n"],"names":["window","customElements","define","DtBase","styles","css","properties","label","type","String","context","outline","Boolean","href","title","onClick","attribute","rounded","confirm","buttonClass","custom","favorite","reflect","favorited","listButton","buttonStyle","Object","classes","this","constructor","super","connectedCallback","id","startsWith","addEventListener","async","event","CustomEvent","bubbles","detail","field","postType","onSuccess","result","keys","find","item","includes","svg","shadowRoot","querySelector","assignedNodes","flatten","node","nodeType","Node","ELEMENT_NODE","classList","contains","add","remove","requestUpdate","following","console","log","onError","error","warn","dispatchEvent","handleClick","e","preventDefault","form","closest","formData","FormData","data","el","forEach","value","key","Array","from","elements","localName","trim","filteredValues","map","name","values","newValue","submit","stopPropagation","toggleState","composed","_getSVGIcon","html","_dismiss","hide","render","buttonClasses","slotContent","classMap","styleMap"],"mappings":"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"}
{"version":3,"file":"dt-list.js","sources":["../../../src/components/layout/dt-list/dt-list.js"],"sourcesContent":["import { html, css } from 'lit';\nimport { msg, str } from '@lit/localize';\nimport { map } from 'lit/directives/map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport DtBase from '../../dt-base.js';\n\nexport class DtList extends DtBase {\n  static get styles() {\n    return css`\n      :host {\n        --number-of-columns: 7;\n        font-family: var(--dt-list-font-family, var(--font-family));\n        font-size: var(--dt-list-font-size, 15px);\n        font-weight: var(--dt-list-font-weight, 300);\n        line-height: var(--dt-list-line-height, 1.5);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .section {\n        container-type: inline-size;\n        background-color: var(--dt-list-background-color, #fefefe);\n        border: 1px solid var(--dt-list-border-color, #f1f1f1);\n        border-radius: var(--dt-list-border-radius, 10px);\n        box-shadow: var(--dt-list-box-shadow, 0 2px 4px rgb(0 0 0 / 25%));\n        padding: var(--dt-list-section-padding, 1rem);\n      }\n\n      .header {\n        display: flex;\n        justify-content: flex-start;\n        align-items: baseline;\n        gap: var(--dt-list-header-gap, 1.5em);\n        flex-wrap: wrap;\n      }\n\n      .section-header {\n        color: var(--dt-list-header-color, var(--primary-color));\n        font-size: 1.5rem;\n        display: inline-block;\n        text-transform: capitalize;\n      }\n\n      .toggleButton {\n        color: var(--dt-list-header-color, var(--primary-color));\n        font-size: 1rem;\n        background: transparent;\n        border: var(--dt-list-toggleButton, 0.1em solid rgb(0 0 0 / 0.2));\n        border-radius: 0.25em;\n        padding: 0.25em 0.5em;\n        cursor: pointer;\n      }\n\n      .toggleButton svg {\n        height: 0.9rem;\n        transform: translateY(-2px);\n        vertical-align: bottom;\n        width: 1rem;\n        fill: var(--dt-list-header-color, var(--primary-color));\n        stroke: var(--dt-list-header-color, var(--primary-color));\n      }\n\n      .list_action_section {\n        background-color: var(\n          --dt-list-action-section-background-color,\n          #ecf5fc\n        );\n        border-radius: var(--dt-list-border-radius, 10px);\n        margin: var(--dt-list-action-section-margin, 30px 0);\n        padding: var(--dt-list-action-section-padding, 20px);\n      }\n      .list_action_section_header {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n      }\n      .close-button {\n        outline: none;\n        font-size: 2.5em;\n        line-height: 1;\n        color: var(--dt-list-action-close-button, var(--inactive-color));\n        background: transparent;\n        border: none;\n        cursor: pointer;\n      }\n      .fieldsList {\n        list-style-type: none;\n        column-count: 1;\n      }\n\n      .list-field-picker-item {\n        list-style-type: none;\n      }\n\n      .list-field-picker-item input {\n        margin: 1rem;\n      }\n\n      .list-field-picker-item .dt-icon {\n        height: var(--dt-list-field-picker-icon-size, 1rem);\n        width: var(--dt-list-field-picker-icon-size, 1rem);\n      }\n\n      table {\n        display: grid;\n        border: 1px solid var(--dt-list-border-color, #f1f1f1);\n        border-top: 0;\n        border-collapse: collapse;\n        min-width: 100%;\n        grid-template-columns: 1fr;\n      }\n\n      /* table.table-contacts {\n        display: table !important;\n        width: 100%;\n        border-collapse: collapse;\n        border-radius: 0;\n        margin-bottom: 1rem;\n      } */\n\n      table td:last-child {\n        border-bottom: 1px solid var(--dt-list-border-color, #f1f1f1);\n        padding-bottom: 2rem;\n      }\n\n      tbody,\n      tr {\n        display: contents;\n      }\n\n      thead {\n        display: none;\n      }\n      /* table.table-contacts thead {\n        display: table-header-group;\n      }\n      table.table-contacts tr {\n        display: table-row;\n      }\n      table.table-contacts tbody {\n        display: table-row-group;\n      } */\n      tr {\n        cursor: pointer;\n      }\n\n      /* table.table-contacts tr:nth-child(2n + 1) {\n        background: #fefefe;\n      } */\n\n      tr:nth-child(2n + 1) {\n        background: #f1f1f1;\n      }\n\n      tr:hover {\n        background-color: var(--dt-list-hover-background-color, #ecf5fc);\n      }\n\n      tr a {\n        color: var(--dt-list-link-color, var(--primary-color));\n      }\n\n      .column-name {\n        pointer-events: none;\n        font-size: 15px;\n        font-weight: 700;\n      }\n      #sort-arrows {\n        grid-template-columns: 4fr 1fr;\n        display: flex;\n        flex-direction: column;\n        height: 1em;\n        justify-content: space-evenly;\n      }\n      th.all span.sort-arrow-up {\n        border-color: transparent transparent\n          var(--dt-list-sort-arrow-color, #dcdcdc) transparent;\n        border-style: solid;\n        border-width: 0 0.3em 0.3em 0.3em;\n      }\n\n      th.all span.sort-arrow-down {\n        content: '';\n        border-color: var(--dt-list-sort-arrow-color, #dcdcdc) transparent\n          transparent;\n        border-style: solid;\n        border-width: 0.3em 0.3em 0;\n      }\n\n      th.all span.sort-arrow-up.sortedBy {\n        border-color: transparent transparent\n          var(--dt-list-sort-arrow-color-highlight, #41739c) transparent;\n      }\n\n      th.all span.sort-arrow-down.sortedBy {\n        border-color: var(--dt-list-sort-arrow-color-highlight, #41739c)\n          transparent transparent;\n      }\n\n      td {\n        border: 0;\n        grid-column: 1 / span 3;\n        padding-inline-start: 1em;\n      }\n\n      td::before {\n        content: attr(title) ': ';\n        padding-inline-end: 1em;\n      }\n\n      td.no-title {\n        grid-column: 1 / span 3;\n      }\n\n      td.line-count {\n        padding-block-start: 0.8em;\n        padding-inline-start: 1em;\n      }\n\n      td.no-title::before {\n        content: '';\n        padding-inline-end: 0.25em;\n      }\n\n      th.bulk_edit_checkbox,\n      td.bulk_edit_checkbox {\n        grid-column: 1 / auto;\n        padding: 0;\n        width: 0; /* Initially no width */\n      }\n\n      .bulk_edit_checkbox input {\n        display: none;\n        margin: 0;\n      }\n\n      .bulk_editing .bulk_edit_checkbox {\n        grid-column: 1 / auto;\n        padding: 0;\n        width: auto; /* Width when parent has .bulk_editing */\n      }\n      .bulk_editing .bulk_edit_checkbox input {\n        display: initial;\n      }\n\n      ul {\n        margin: 0;\n        padding: 0;\n      }\n\n      ul li {\n        list-style-type: none;\n      }\n\n      input[type='checkbox'] {\n        margin: 1rem;\n      }\n      table thead th,\n      table tr td {\n        padding: 0.5333333333rem 0.6666666667rem 0.6666666667rem;\n      }\n\n      ::slotted(svg) {\n        fill: var(--fav-star-not-selected-color, #c7c6c1);\n      }\n\n      .icon-star {\n        fill: var(--fav-star-not-selected-color, #c7c6c1); /* Default to gray (non-favorite) */\n        margin: 0;\n      }\n      .icon-star.selected {\n        fill: var(--fav-star-selected-color, #ffc105); /* Favorite state in yellow */\n      }\n\n      @media (min-width: 650px) {\n        .fieldsList {\n          column-count: 2;\n        }\n        table {\n          grid-template-columns:\n            minmax(0px, 0fr)\n            minmax(32px, 0.25fr)\n            minmax(32px, 0.25fr)\n            repeat(var(--number-of-columns, 6), minmax(50px, 1fr));\n        }\n\n        table.bulk_editing {\n          grid-template-columns:\n            minmax(32px, 0.25fr)\n            minmax(32px, 0.25fr)\n            minmax(32px, 0.25fr)\n            repeat(var(--number-of-columns, 6), minmax(50px, 1fr));\n        }\n\n        thead {\n          display: contents;\n        }\n\n        th {\n          position: sticky;\n          top: 0;\n          background: var(\n            --dt-list-header-background-color,\n            var(--dt-tile-background-color, #fefefe)\n          );\n          text-align: start;\n          justify-self: start;\n          font-weight: normal;\n          font-size: 1.1rem;\n          color: var(--dt-list-header-color, #0a0a0a);\n          white-space: pre-wrap;\n          display: grid;\n          place-items: center;\n          grid-template-columns: 2fr 1fr;\n        }\n\n        th:last-child {\n          border: 0;\n        }\n        td {\n          display: flex;\n          align-items: center;\n          grid-column: auto;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          padding-top: 0.5rem;\n          padding-bottom: 0.5rem;\n          padding-inline-start: 0;\n          color: var(--text-color-mid);\n          border-bottom: 1px solid var(--dt-list-border-color, #f1f1f1);\n        }\n        td::before {\n          content: '';\n          display: none;\n        }\n\n        td.no-title {\n          grid-column: auto;\n        }\n      }\n\n        .btn {\n        -webkit-appearance: none;\n        border: 1px solid transparent;\n        border-radius: 5px;\n        cursor: pointer;\n        display: inline-block;\n        font-family: inherit;\n        font-size: .9rem;\n        line-height: 1;\n        margin: 0 !important;\n        text-align: center;\n        -webkit-transition: background-color .25s ease-out, color .25s ease-out;\n        transition: background-color .25s ease-out, color .25s ease-out;\n        vertical-align: middle;\n      }\n\n      .btn.btn-primary {\n        background-color: #3f729b;\n        color: #fefefe;\n        border-radius: 5px;\n      }\n\n      .btn.btn-primary:hover, .btn.btn-primary:focus {\n        background-color: #366184;\n        color: #fefefe;\n      }\n\n      .text-center {\n        text-align: center;\n      }\n\n      .btn.btn-primary .dt-button {\n        margin: 0;\n        border-radius: 5px;\n      }\n\n\n      @media (min-width: 950px) {\n        .fieldsList {\n          column-count: 3;\n        }\n      }\n\n      @media (min-width: 1500px) {\n        .fieldsList {\n          column-count: 4;\n        }\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      postType: { type: String },\n      postTypeLabel: { type: String },\n      posttypesettings: { type: Object, attribute: true },\n      posts: { type: Array },\n      total: { type: Number },\n      columns: { type: Array },\n      sortedBy: { type: String },\n      loading: { type: Boolean, default: true },\n      offset: { type: Number },\n      showArchived: { type: Boolean, default: false },\n      showFieldsSelector: { type: Boolean, default: false },\n      showBulkEditSelector: { type: Boolean, default: false },\n      nonce: { type: String },\n      payload: {type: Object},\n      favorite: {type: Boolean},\n      initialLoadPost: { type: Boolean, default: false },\n      loadMore: { type: Boolean, default: false },\n      headerClick: { type: Boolean, default: false },\n    };\n  }\n\n\n  constructor() {\n    super();\n    this.sortedBy = 'name';\n    this.payload = {\n      \"sort\": this.sortedBy,\n      \"overall_status\": [\n        \"-closed\"\n      ],\n      \"fields_to_return\": this.sortedColumns\n    }\n    this.initalLoadPost = false;\n    if (!this.initalLoadPost) {\n      this.posts = [];\n      this.limit=100;\n  }\n}\n\n  firstUpdated() {\n    this.postTypeSettings = window.post_type_fields;\n    this.sortedColumns = this.columns.includes('favorite')\n      ? ['favorite', ...this.columns.filter(col => col !== 'favorite')]\n      : this.columns;\n\n      this.style.setProperty('--number-of-columns', this.columns.length - 1);\n    }\n\n  async _getPosts(payload) {\n    // -- * --- STARTS HERE  -- * ---\n    /* \"THIS CODE IS COMMENTED FOR NOW, WOULD BE UPDATED WHEN WORKED ON 'LOAD MORE' FUNCTIONALITY.\"\n    this.loading = true;\n    this.filteredOptions = [];\n    const sort = `${sortOrder === 'desc' ? '-' : ''}${sortBy}`;\n    const URLParams = encodeURI(\n      `?offset=${offset}&sortBy=${sort}&offset=${offset}${this.columns\n        .map(column => `&fields_to_return=${column}`)\n        .join('')}`\n    );\n    const response = await this.api.makeRequestOnPosts(\n      'GET',\n      `${this.postType}${URLParams}`\n    ) */\n    // -- * --- ENDS HERE  -- * ---\n\n    const event = await new CustomEvent('dt:get-data', {\n      bubbles: true,\n      detail: {\n        field: this.name,\n        postType: this.postType,\n        query: payload,\n        onSuccess: result => {\n          if (this.initalLoadPost && this.loadMore) {\n            this.posts = [...this.posts, ...result];\n\n            this.postsLength=this.posts.length;\n            this.total = result.length;\n            this.loadMore=false;\n          }\n          if (!this.initalLoadPost) {\n            this.posts = [...result];\n            this.offset = this.posts.length;\n            this.initalLoadPost = true;\n            this.total = result.length;\n          }\n          if (this.headerClick){\n            this.posts = result;\n\n            this.offset = this.posts.length;\n            this.headerClick=false;\n          }\n          this.total = result.length;\n        },\n        onError: error => {\n          console.warn(error);\n        },\n      },\n    });\n    this.dispatchEvent(event);\n  }\n\n  _headerClick(e) {\n    const column = e.target.dataset.id;\n    const currentSort = this.sortedBy;\n    if (currentSort === column) {\n      // If already ascending, switch to descending\n      if (column.startsWith('-')) {\n        this.sortedBy = column.replace('-', '');\n      } else {\n        this.sortedBy = `-${column}`;\n      }\n    } else {\n      // If sorting a new column, default to ascending\n      this.sortedBy = column;\n    }\n\n    this.payload = {\n      \"sort\": this.sortedBy,\n       \"overall_status\": [\n        \"-closed\"\n      ],'limit':this.limit,\n      \"fields_to_return\": this.columns\n    }\n    this.headerClick=true;\n    this._getPosts(this.payload)\n    // \" THIS CODE IS COMMENTED FOR NOW, WOULD BE UPDATED WHEN WORKED ON 'LOAD MORE' FUNCTIONALITY \"\n    // this._getPosts(this.offset ? this.offset : 0, column).then(response => {\n    //   this.posts = response;\n    //   this.sortedBy = column;\n    // });\n  }\n\n  static _rowClick(permalink) {\n    window.open(permalink, '_self');\n  }\n\n  _bulkEdit() {\n    this.showBulkEditSelector = !this.showBulkEditSelector;\n  }\n\n  _fieldsEdit() {\n    this.showFieldsSelector = !this.showFieldsSelector;\n  }\n\n  _toggleShowArchived() {\n    this.showArchived = !this.showArchived;\n    this.headerClick = true;\n    if(this.showArchived){\n      // eslint-disable-next-line camelcase\n      const { overall_status,offset, ...filteredPayload } = this.payload;\n      this.payload = filteredPayload; // Assign the new payload without overall_status\n    }else{\n      this.payload.overall_status = [\"-closed\"];\n    }\n    this._getPosts(this.payload);\n  }\n\n  _sortArrowsClass(column) {\n    return this.sortedBy === column ? 'sortedBy' : '';\n  }\n\n  /* The above code appears to be a comment block in JavaScript. It includes a function name\n  \"_sortArrowsToggle\" and a question asking what the code is doing. However, the function\n  implementation or any other code logic is not provided within the comment block. */\n  _sortArrowsToggle(column) {\n    if (this.sortedBy !== `-${column}`) {\n      return `-${column}`;\n    }\n    return column;\n  }\n\n  _headerTemplate() {\n    if (this.postTypeSettings) {\n      return html`\n        <thead>\n          <tr>\n            <th id=\"bulk_edit_master\" class=\"bulk_edit_checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"bulk_send_app_id\"\n                value=\"\"\n                id=\"bulk_edit_master_checkbox\"\n              />\n            </th>\n            <th class=\"no-title line-count\"></th>\n            ${map(this.sortedColumns, column => {\n              const isFavoriteColumn = column === 'favorite';\n              return html`<th\n                class=\"all\"\n                data-id=\"${this._sortArrowsToggle(column)}\"\n                @click=${this._headerClick}\n              >\n                  <span class=\"column-name\"\n                     >${isFavoriteColumn\n                      ? null\n                      : this.postTypeSettings[column].name}</span\n                  >\n                  ${!isFavoriteColumn\n                    ? html`<span id=\"sort-arrows\">\n                        <span\n                          class=\"sort-arrow-up ${this._sortArrowsClass(column)}\"\n                          data-id=\"${column}\"\n                        ></span>\n                        <span\n                          class=\"sort-arrow-down ${this._sortArrowsClass(\n                            `-${column}`\n                          )}\"\n                          data-id=\"-${column}\"\n                        ></span>\n                      </span>`\n                    : ''}\n              </th>`;\n            })}\n          </tr>\n        </thead>\n      `;\n    }\n    return null;\n  }\n\n    _rowTemplate() {\n      if (this.posts && Array.isArray(this.posts)) {\n        const rows = this.posts.map((post, i) => {\n          if (\n            this.showArchived ||\n            (!this.showArchived && post.overall_status !== 'closed')\n          ) {\n            return html`\n              <tr class=\"dnd-moved\" data-link=\"${post.permalink}\" @click=${() => this._rowClick(post.permalink)}>\n                <td class=\"bulk_edit_checkbox no-title\">\n                  <input type=\"checkbox\" name=\"bulk_edit_id\" .value=\"${post.ID}\" />\n                </td>\n                <td class=\"no-title line-count\">${i + 1}.</td>\n                ${this._cellTemplate(post)}\n              </tr>\n            `;\n          }\n          return null;\n        }).filter(row => row !== null);\n\n        return rows.length > 0 ? rows : html`<p>No contacts available</p>`;\n      }\n      return null;\n    }\n\n  // eslint-disable-next-line class-methods-use-this\n  formatDate(dateString) {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n    }).format(date);\n  }\n\n  _cellTemplate(post) {\n    return map(this.sortedColumns, column => {\n      if (\n        ['text', 'textarea', 'number'].includes(\n          this.postTypeSettings[column].type\n        )\n      ) {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${post[column]}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'date') {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${this.formatDate(post[column].formatted)}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'user_select' &&\n        post[column] &&\n        post[column].display\n      ) {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${ifDefined(post[column].display)}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'key_select' &&\n        post[column] &&\n        (post[column].label || post[column].name)\n      ) {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${post[column].label || post[column].name}\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'multi_select' ||\n        (this.postTypeSettings[column].type === 'tags' &&\n          post[column] &&\n          post[column].length > 0)\n      ) {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          <ul>\n            ${map(\n              post[column],\n              value =>\n                html`<li>\n                  ${this.postTypeSettings[column].default[value].label}\n                </li>`\n            )}\n          </ul>\n        </td>`;\n      }\n      if (\n        this.postTypeSettings[column].type === 'location' ||\n        this.postTypeSettings[column].type === 'location_meta'\n      ) {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${ifDefined(post[column].label)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'communication_channel') {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          ${ifDefined(post[column].value)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'connection') {\n        return html` <td\n          dir=\"auto\"\n          title=\"${this.postTypeSettings[column].name}\"\n        >\n          <!-- TODO: look at this, it doesn't match the current theme. -->\n          ${ifDefined(post[column].value)}\n        </td>`;\n      }\n      if (this.postTypeSettings[column].type === 'boolean') {\n        if (column === 'favorite') {\n\n          return html`<td\n            dir=\"auto\"\n            title=\"${this.postTypeSettings[column].name}\"\n            class=\"\"\n          >\n            <dt-button\n              id=\"favorite-button-${post.ID}\"\n              label=\"favorite\"\n              title=\"favorite\"\n              type=\"button\"\n              posttype=\"contacts\"\n              context=\"star\"\n              .favorited=${post.favorite ? post.favorite : false}\n              .listButton=${true}\n            >\n              <svg\n                class=\"${classMap({\n                  'icon-star': true,\n                  selected: post.favorite,\n                })}\"\n                height=\"15\"\n                viewBox=\"0 0 32 32\"\n              >\n                <path\n                  d=\"M 31.916 12.092 C 31.706 11.417 31.131 10.937 30.451 10.873 L 21.215 9.996 L 17.564 1.077 C 17.295 0.423 16.681 0 16 0 C 15.318 0 14.706 0.423 14.435 1.079 L 10.784 9.996 L 1.546 10.873 C 0.868 10.937 0.295 11.417 0.084 12.092 C -0.126 12.769 0.068 13.51 0.581 13.978 L 7.563 20.367 L 5.503 29.83 C 5.354 30.524 5.613 31.245 6.165 31.662 C 6.462 31.886 6.811 32 7.161 32 C 7.463 32 7.764 31.915 8.032 31.747 L 16 26.778 L 23.963 31.747 C 24.546 32.113 25.281 32.08 25.834 31.662 C 26.386 31.243 26.645 30.524 26.494 29.83 L 24.436 20.367 L 31.417 13.978 C 31.931 13.51 32.127 12.769 31.916 12.092 Z M 31.916 12.092\"\n                />\n              </svg>\n            </dt-button>\n          </td>`;\n        }\n        if (this.postTypeSettings[column] === true) {\n          return html`<td\n            dir=\"auto\"\n            title=\"${this.postTypeSettings[column].name}\"\n          >\n            ['&check;']\n          </td>`;\n        }\n      }\n      return html`<td\n        dir=\"auto\"\n        title=\"${this.postTypeSettings[column].name}\"\n      ></td>`;\n    });\n  }\n\n  _fieldListIconTemplate(field) {\n    if (this.postTypeSettings[field].icon) {\n      return html`<img\n        class=\"dt-icon\"\n        src=\"${this.postTypeSettings[field].icon}\"\n        alt=\"${this.postTypeSettings[field].name}\"\n      />`;\n    }\n    return null;\n  }\n\n  _fieldsListTemplate() {\n    return repeat(\n      Object.keys(this.postTypeSettings).sort((a, b) => {\n        const nameA = this.postTypeSettings[a].name.toUpperCase(); // ignore upper and lowercase\n        const nameB = this.postTypeSettings[b].name.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      }),\n      field => field,\n      field => {\n        if (!this.postTypeSettings[field].hidden) {\n          return html`<li class=\"list-field-picker-item\">\n            <label>\n              <input\n                type=\"checkbox\"\n                id=\"${field}\"\n                name=\"${field}\"\n                .value=\"${field}\"\n                @change=${this._updateFields}\n                ?checked=${this.columns.includes(field)}\n              />\n              ${this._fieldListIconTemplate(field)}\n              ${this.postTypeSettings[field].name}</label\n            >\n          </li> `;\n        }\n        return null;\n      }\n    );\n  }\n\n  _fieldsSelectorTemplate() {\n    if (this.showFieldsSelector) {\n      return html`<div\n        id=\"list_column_picker\"\n        class=\"list_field_picker list_action_section\"\n      >\n        <div class=\"list_action_section_header\">\n          <p style=\"font-weight:bold\">\n            ${msg('Choose which fields to display as columns in the list')}\n          </p>\n          <button\n            class=\"close-button list-action-close-button\"\n            data-close=\"list_column_picker\"\n            aria-label=\"Close modal\"\n            type=\"button\"\n            @click=${this._fieldsEdit}\n          >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n        <ul class=\"fieldsList\">\n          ${this._fieldsListTemplate()}\n        </ul>\n      </div>`;\n    }\n    return null;\n  }\n\n  _updateFields(e) {\n    const field = e.target.value;\n    const viewableColumns = this.columns;\n\n    if (!viewableColumns.includes(field)) {\n      viewableColumns.push(field);\n    } else {\n      viewableColumns.filter(column => column !== field);\n      viewableColumns.splice(viewableColumns.indexOf(field), 1);\n    }\n\n    this.columns = viewableColumns;\n    this.style.setProperty('--number-of-columns', this.columns.length - 1);\n\n    this.requestUpdate();\n  }\n\n  _bulkSelectorTemplate() {\n    if (this.showBulkEditSelector) {\n      return html`<div id=\"bulk_edit_picker\" class=\"list_action_section\">\n        <div class=\"list_action_section_header\">\n          <p style=\"font-weight:bold\">\n            ${msg(\n              str`Select all the ${this.postType} you want to update from the list, and update them below`\n            )}\n          </p>\n          <button\n            class=\"close-button list-action-close-button\"\n            aria-label=\"Close modal\"\n            type=\"button\"\n            @click=${this._bulkEdit}\n          >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n        <ul class=\"fieldsList\">\n          This is where the bulk edit form will go.\n        </ul>\n      </div>`;\n    }\n    return null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.payload = {\n      sort: this.sortedBy,\n      overall_status: ['-closed'],\n      fields_to_return: this.columns,\n    };\n    if (this.posts.length===0) {\n      this._getPosts(this.payload).then(posts => {\n        this.posts = posts;\n      });\n    }\n  }\n\n  _handleLoadMore() {\n    this.limit=500;\n    this.payload = {\n      \"sort\": this.sortedBy,\n      \"overall_status\": [\n        \"-closed\"\n      ],\n      \"fields_to_return\": this.columns,\n      \"offset\": this.offset, \"limit\": this.limit\n    }\n    this.loadMore = true;\n    this._getPosts(this.payload).then(posts => {\n      console.log(posts);\n    });\n  }\n\n  render() {\n    const bulkEditClass = {\n      bulk_editing: this.showBulkEditSelector,\n      hidden: false,\n    };\n    if(this.posts){\n      this.total = this.posts.length;\n    }\n\n    // prettier-ignore\n    const bulkEditSvg = html`\n      <svg viewBox=\"0 0 100 100\" fill=\"#000000\" style=\"enable-background:new 0 0 100 100;\" xmlns=\"http://www.w3.org/2000/svg\">\n        <line style=\"stroke-linecap: round; paint-order: fill; fill: none; stroke-width: 15px;\" x1=\"7.97\" y1=\"50.199\" x2=\"76.069\" y2=\"50.128\" transform=\"matrix(0.999999, 0.001017, -0.001017, 0.999999, 0.051038, -0.042708)\"/>\n        <line style=\"stroke-linecap: round; stroke-width: 15px;\" x1=\"7.97\" y1=\"17.751\" x2=\"92.058\" y2=\"17.751\"/>\n        <line style=\"stroke-linecap: round; stroke-width: 15px;\" x1=\"7.97\" y1=\"82.853\" x2=\"42.343\" y2=\"82.853\"/>\n        <polygon style=\"stroke-linecap: round; stroke-miterlimit: 1; stroke-linejoin: round; fill: rgb(255, 255, 255); paint-order: stroke; stroke-width: 9px;\" points=\"22.982 64.982 33.592 53.186 50.916 70.608 82.902 21.308 95 30.85 52.256 95\"/>\n      </svg>\n    `;\n    // prettier-ignore\n    const fieldsSvg = html`<svg height='100px' width='100px'  fill=\"#000000\" xmlns:x=\"http://ns.adobe.com/Extensibility/1.0/\" xmlns:i=\"http://ns.adobe.com/AdobeIllustrator/10.0/\" xmlns:graph=\"http://ns.adobe.com/Graphs/1.0/\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" style=\"enable-background:new 0 0 100 100;\" xml:space=\"preserve\"><g><g i:extraneous=\"self\"><g><path d=\"M94.4,63c0-5.7-3.6-10.5-8.6-12.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v43.2c-5,1.9-8.6,6.8-8.6,12.5     s3.6,10.5,8.6,12.5v17.2c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V75.5C90.9,73.6,94.4,68.7,94.4,63z M81,66.7     c-2,0-3.7-1.7-3.7-3.7c0-2,1.7-3.7,3.7-3.7s3.7,1.7,3.7,3.7C84.7,65.1,83.1,66.7,81,66.7z\"></path><path d=\"M54.8,24.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v17.2c-5,1.9-8.6,6.8-8.6,12.5s3.6,10.5,8.6,12.5v43.2     c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V49.5c5-1.9,8.6-6.8,8.6-12.5S59.8,26.5,54.8,24.5z M50,40.7c-2,0-3.7-1.7-3.7-3.7     c0-2,1.7-3.7,3.7-3.7c2,0,3.7,1.7,3.7,3.7C53.7,39.1,52,40.7,50,40.7z\"></path><path d=\"M23.8,50.5V7.3c0-2.7-2.2-4.8-4.8-4.8c-2.7,0-4.8,2.2-4.8,4.8v43.2c-5,1.9-8.6,6.8-8.6,12.5s3.6,10.5,8.6,12.5v17.2     c0,2.7,2.2,4.8,4.8,4.8c2.7,0,4.8-2.2,4.8-4.8V75.5c5-1.9,8.6-6.8,8.6-12.5S28.8,52.5,23.8,50.5z M19,66.7c-2,0-3.7-1.7-3.7-3.7     c0-2,1.7-3.7,3.7-3.7c2,0,3.7,1.7,3.7,3.7C22.7,65.1,21,66.7,19,66.7z\"></path></g></g></g></svg>`;\n\n    return html`\n      <div class=\"section\">\n        <div class=\"header\">\n          <div class=\"section-header\">\n            <span\n              class=\"section-header posts-header\"\n              style=\"display: inline-block\"\n              >${msg(\n                str`${\n                  this.postTypeLabel ? this.postTypeLabel : this.postType\n                } List`\n              )}</span\n            >\n          </div>\n          <span class=\"filter-result-text\"\n            >${msg(str`Showing ${this.total} of ${this.total}`)}</span\n          >\n\n          <button\n            class=\"bulkToggle toggleButton\"\n            id=\"bulk_edit_button\"\n            @click=${this._bulkEdit}\n          >\n            ${bulkEditSvg} ${msg('Bulk Edit')}\n          </button>\n          <button\n            class=\"fieldsToggle toggleButton\"\n            id=\"fields_edit_button\"\n            @click=${this._fieldsEdit}\n          >\n            ${fieldsSvg} ${msg('Fields')}\n          </button>\n\n          <dt-toggle\n            name=\"showArchived\"\n            label=${msg('Show Archived')}\n            ?checked=${this.showArchived}\n            hideIcons\n            onchange=${this._toggleShowArchived}\n            @click=${this._toggleShowArchived}\n          ></dt-toggle>\n        </div>\n\n        ${this._fieldsSelectorTemplate()} ${this._bulkSelectorTemplate()}\n        <table class=\"table-contacts ${classMap(bulkEditClass)}\">\n          ${this._headerTemplate()}\n          ${this.posts ? this._rowTemplate() : msg('Loading')}\n        </table>\n          ${this.total >= 100 ?\n          html`<div class=\"text-center\"><dt-button buttonStyle=${JSON.stringify({\"margin\":\"0\"})} class=\"loadMoreButton btn btn-primary\" @click=${this._handleLoadMore}>Load More</dt-button></div>`\n          : ''}\n      </div>\n    `;\n  }\n}\n\nwindow.customElements.define('dt-list', DtList);\n"],"names":["window","customElements","define","DtBase","styles","css","properties","postType","type","String","postTypeLabel","posttypesettings","Object","attribute","posts","Array","total","Number","columns","sortedBy","loading","Boolean","default","offset","showArchived","showFieldsSelector","showBulkEditSelector","nonce","payload","favorite","initialLoadPost","loadMore","headerClick","constructor","super","this","sort","overall_status","fields_to_return","sortedColumns","initalLoadPost","limit","firstUpdated","postTypeSettings","post_type_fields","includes","filter","col","style","setProperty","length","async","event","CustomEvent","bubbles","detail","field","name","query","onSuccess","result","postsLength","onError","error","console","warn","dispatchEvent","_headerClick","e","column","target","dataset","id","startsWith","replace","_getPosts","static","permalink","open","_bulkEdit","_fieldsEdit","_toggleShowArchived","filteredPayload","_sortArrowsClass","_sortArrowsToggle","_headerTemplate","html","map","isFavoriteColumn","_rowTemplate","isArray","rows","post","i","_rowClick","ID","_cellTemplate","row","formatDate","dateString","date","Date","Intl","DateTimeFormat","month","day","year","format","formatted","display","ifDefined","label","value","classMap","selected","_fieldListIconTemplate","icon","_fieldsListTemplate","repeat","keys","a","b","nameA","toUpperCase","nameB","hidden","_updateFields","_fieldsSelectorTemplate","msg","viewableColumns","splice","indexOf","push","requestUpdate","_bulkSelectorTemplate","str","connectedCallback","then","_handleLoadMore","log","render","bulkEditClass","bulk_editing","bulkEditSvg","fieldsSvg","JSON","stringify","margin"],"mappings":"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"}